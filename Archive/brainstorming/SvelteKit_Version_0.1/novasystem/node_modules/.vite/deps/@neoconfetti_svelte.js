import "./chunk-F3FYYIAV.js";

// node_modules/@neoconfetti/svelte/dist/index.js
var t = (t2, b2 = {}) => {
  w(b2);
  let { colors: k2 = ["#FFC700", "#FF0000", "#2E3191", "#41BBC7"], duration: W = 3500, force: S = 0.5, particleCount: G = 150, particleShape: X = "mix", particleSize: _ = 12, destroyAfterDone: C = true, stageHeight: z = 800, stageWidth: E = 1600 } = b2;
  !function(t3) {
    const e2 = f("style");
    e2.dataset.neoconfetti = "", e2.textContent = '@keyframes fk9XWG_y-axis{to{transform:translate3d(0,var(--stage-height),0)}}@keyframes fk9XWG_x-axis{to{transform:translate3d(var(--x-landing-point),0,0)}}@keyframes fk9XWG_rotation{50%{transform:rotate3d(var(--half-rotation),180deg)}to{transform:rotate3d(var(--rotation),360deg)}}.fk9XWG_container{width:0;height:0;z-index:1200;position:relative;overflow:visible}.fk9XWG_particle{animation:x-axis var(--duration-chaos)forwards cubic-bezier(var(--x1),var(--x2),var(--x3),var(--x4));animation-name:fk9XWG_x-axis}.fk9XWG_particle>div{animation:y-axis var(--duration-chaos)forwards cubic-bezier(var(--y1),var(--y2),var(--y3),var(--y4));width:var(--width);height:var(--height);animation-name:fk9XWG_y-axis;position:absolute;top:0;left:0}.fk9XWG_particle>div:before{height:100%;width:100%;content:"";background-color:var(--bgcolor);animation:rotation var(--rotation-duration)infinite linear;border-radius:var(--border-radius);animation-name:fk9XWG_rotation;display:block}', h(document.head, e2);
  }(), t2.classList.add("fk9XWG_container"), t2.style.setProperty("--stage-height", z + "px");
  let P, A = p(G, k2), H = e(t2, A);
  function M(t3, e2) {
    const f2 = l(c() * (x - 1)), h2 = "rectangles" !== X && ("circles" === X || v(f2)), p2 = (e3, r2) => t3.style.setProperty(e3, r2 + "");
    p2("--x-landing-point", u(s(m(e2, 90) - 180), 0, 180, -E / 2, E / 2) + "px"), p2("--duration-chaos", W - l(1e3 * c()) + "ms");
    const b3 = c() < a ? g(c() * i, 2) : 0;
    p2("--x1", b3), p2("--x2", -1 * b3), p2("--x3", b3), p2("--x4", g(s(u(s(m(e2, 90) - 180), 0, 180, -1, 1)), 4)), p2("--y1", g(c() * n, 4)), p2("--y2", g(c() * S * (y() ? 1 : -1), 4)), p2("--y3", n), p2("--y4", g(d(u(s(e2 - 180), 0, 180, S, -S), 0), 4)), p2("--width", (h2 ? _ : l(4 * c()) + _ / 2) + "px"), p2("--height", (h2 ? _ : l(2 * c()) + _) + "px");
    const k3 = f2.toString(2).padStart(3, "0").split("");
    p2("--half-rotation", k3.map((t4) => +t4 / 2 + "")), p2("--rotation", k3), p2("--rotation-duration", g(c() * (o - r) + r) + "ms"), p2("--border-radius", h2 ? "50%" : 0);
  }
  for (const [t3, e2] of Object.entries(H))
    M(e2, A[+t3].degree);
  return Promise.resolve().then(() => P = setTimeout(() => C && (t2.innerHTML = ""), W)), { update(r2) {
    w(r2);
    const o2 = r2.particleCount ?? G, a2 = r2.colors ?? k2, i2 = r2.stageHeight ?? z;
    if (A = p(o2, a2), o2 === G && JSON.stringify(k2) !== JSON.stringify(a2))
      for (const [t3, { color: e2 }] of Object.entries(A))
        H[+t3].style.setProperty("--bgcolor", e2);
    o2 !== G && (t2.innerHTML = "", H = e(t2, A)), C && !r2.destroyAfterDone && clearTimeout(P), t2.style.setProperty("--stage-height", i2 + "px"), k2 = a2, W = r2.duration ?? W, S = r2.force ?? S, G = o2, X = r2.particleShape ?? X, _ = r2.particleSize ?? _, C = r2.destroyAfterDone ?? C, z = i2, E = r2.stageWidth ?? E;
  }, destroy() {
    clearTimeout(P);
  } };
};
function e(t2, e2 = []) {
  const r2 = [];
  for (const { color: o2 } of e2) {
    const e3 = f("div");
    e3.className = "fk9XWG_particle", e3.style.setProperty("--bgcolor", o2);
    const a2 = f("div");
    h(e3, a2), h(t2, e3), r2.push(e3);
  }
  return r2;
}
var r = 200;
var o = 800;
var a = 0.1;
var i = 0.3;
var n = 0.5;
var s = Math.abs;
var c = Math.random;
var l = Math.round;
var d = Math.max;
var f = (t2) => document.createElement(t2);
var h = (t2, e2) => t2.appendChild(e2);
var p = (t2, e2) => Array.from({ length: t2 }, (r2, o2) => ({ color: e2[o2 % e2.length], degree: 360 * o2 / t2 }));
var g = (t2, e2 = 2) => l((t2 + Number.EPSILON) * 10 ** e2) / 10 ** e2;
var u = (t2, e2, r2, o2, a2) => (t2 - e2) * (a2 - o2) / (r2 - e2) + o2;
var m = (t2, e2) => t2 + e2 > 360 ? t2 + e2 - 360 : t2 + e2;
var y = () => c() > 0.5;
var x = 6;
var v = (t2) => 1 !== t2 && y();
var b = (t2) => void 0 === t2;
var k = (t2, e2) => {
  if (!b(t2) && Number.isSafeInteger(t2) && t2 < 0)
    throw new Error(e2 + " must be a positive integer");
};
var w = ({ particleCount: t2, duration: e2, colors: r2, particleSize: o2, force: a2, stageHeight: i2, stageWidth: n2, particleShape: s2 }) => {
  if (k(t2, "particleCount"), k(e2, "duration"), k(o2, "particleSize"), k(a2, "force"), k(i2, "stageHeight"), k(n2, "stageWidth"), !b(s2) && !/^(mix|circles|rectangles)$/i.test(s2))
    throw new Error('particlesShape should be either "mix" or "circles" or "rectangle"');
  if (!b(r2) && !Array.isArray(r2))
    throw new Error("colors must be an array of strings");
  if (a2 > 1)
    throw new Error("force must be within 0 and 1");
};
export {
  t as confetti
};
//# sourceMappingURL=@neoconfetti_svelte.js.map
